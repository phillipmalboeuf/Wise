
{% include 'blog_tags' %}

<div class="grid light_grey_back">
  <div class="col col--6of12">
    <img src="{{article.image.src|img_url: 'original'}}" alt="{{article.image.alt}}">
  </div>

  <div class="col col--6of12 padded">
    <p class="p--medium">
      {{article.published_at|date: '%x'}}<br>
      {% for tag in article.tags %}
      {% assign first_letter = tag | handleize | first %}
      {% if first_letter != '_' %}
      <span class="slash_seperated">{{tag}}</span>
      {% endif %} 
      {% endfor %} 
    </p>
    <h2 class="small_bottom">{{article.title}}</h2>
    <p class="p--medium"><em>{{article.excerpt}}</em></p>

    <div class="medium_bottom underline_links">
      {% assign content_split = article.content | split: '<p><span><span>[Images]</span></span></p>' %}
      {{content_split[0]}}
    </div>
  </div>
</div>

{% if content_split[1] %}
<!-- {{content_split[1]}} -->

{% assign srcs_split = content_split[1] | split: 'src="' %}
{% assign alts_split = content_split[1] | split: 'alt="' %}
<div class="slider" data-slider>
  <div class="slider__container" style="width: {{srcs_split | size | minus:1}}00%;" data-slider-container>
  {% for src in srcs_split %}
    {% unless forloop.first %}
    {% assign src_split = src | split: '"' %}
    {% assign alt_split = alts_split[forloop.index0] | split: '"' %}
    <div class="slide" data-slide={{forloop.index0 | minus:1}}>
      <div data-slide-content>
        <div class="grid grid--full_height grid--full_height--small padded padded--vertically_thick image_back" style="background-image:url({{src_split[0]}});">
          <div class="col col--4of12 white">
            <h2><em>{{alt_split[0]}}</em></h2>
          </div>
        </div>
      </div>
    </div>
    {% endunless %}
  {% endfor %}
  </div>


  <div class="slider__button"><button class="button--transparent" data-previous-slide-button><svg class="icon-left icon--small"><use xlink:href="#icon-left"></use></svg><svg class="icon-left icon--small"><use xlink:href="#icon-left"></use></svg></button></div>

  <div class="slider__button slider__button--right"><button class="button--transparent" data-next-slide-button><svg class="icon-right icon--small"><use xlink:href="#icon-right"></use></svg><svg class="icon-right icon--small"><use xlink:href="#icon-right"></use></svg></button></div>

  <div class="slider__markers">
      {% for src in srcs_split %}
      {% unless forloop.first %}
      <button class="slider__marker {% if forloop.index0 == 1 %}slider__marker--active{% endif %}" data-slide-marker={{forloop.index0 | minus:1}}>{{forloop.index0 | minus:1}}</button>
      {% endunless %}
      {% endfor %}
    </div>
</div>
{% endif %}

{% for tag in article.tags %}
{% assign tag_split = tag | split: ':' %}
{% if tag_split[0] == '_sourced' %}
<div class="grid grid--full_height _middle _center grid--full_height--small padded padded--vertically_thick image_back">
  <div>
    <h2><em>Sourced in<br>{{tag_split[1]}}.</em></h2>
  </div>
</div>
{% break %}   
{% endif %}
{% endfor %}


{% for tag in article.tags %}
{% assign tag_split = tag | split: ':' %}
{% if tag_split[0] == '_products' %}
<div class="padded padded--vertically_thick light_grey_back text_center">
  <h2><em>This ingredient can be found in the following products</em></h2>
  <p><em>Click on the product to learn more ></em></p>

  {% assign product_handles = tag_split[1] | split: '|' %}
  <div class="grid grid--guttered grid--center">
    {% for handle in product_handles %}
    {% assign product = all_products[handle] %}
    <div class="col col--4of12">
      <a href="{{product.url}}">
        <p class="p--almost a__hide">
          {{product.title}}<br>
          {% for variant in product.variants %}
          <em>{{variant.title}}</em>
          {% endfor %}
        </p>
        <img src="{{product.featured_image.src|img_url: 'original'}}" alt="{{product.featured_image.alt}}">
      </a>
    </div>
    {% endfor %} 
  </div>
</div>
{% break %}   
{% endif %} 
{% endfor %} 


<!-- <div class="grid">

  <article class="grid__item large--three-quarters" itemscope itemtype="http://schema.org/Article">

    <header class="section-header">
      <div class="section-header__left">
        <h1>{{ article.title }}</h1>
        {% capture author %}<strong>{{ article.author }}</strong>{% endcapture %}
        {% capture date %}<time datetime="{{ article.published_at | date: '%Y-%m-%d' }}">{{ article.published_at | date: format: 'month_day_year' }}</time>{% endcapture %}
        <p>{{ 'blogs.article.author_on_date_html' | t: author: author, date: date }}</p>
      </div>
    </header>

    <div class="rte" itemprop="articleBody">
      {{ article.content }}
    </div>

    {% comment %}
      Show off meta information like comments and tags.
    {% endcomment %}
    <ul class="inline-list">
      {% include 'tags-article' %}
    </ul>

    {% comment %}
      Create links to the next and previous articles, if available.
    {% endcomment %}
    {% if blog.next_article or blog.previous_article %}
      <hr>
      <p class="clearfix">
        {% if blog.previous_article %}
          <span class="left">
            &larr; {{ 'blogs.article.older_post' | t | link_to: blog.previous_article }}
          </span>
        {% endif %}
        {% if blog.next_article %}
          <span class="right">
            {{ 'blogs.article.newer_post' | t | link_to: blog.next_article }} &rarr;
          </span>
        {% endif %}
      </p>
    {% endif %}

    {% if blog.comments_enabled? %}
      <hr>

      <h3>{{ 'blogs.comments.comments_with_count' | t: count: number_of_comments }}</h3>

      <hr>

      {% comment %}
        Just like blog.liquid page, define how many comments should be on each page.
      {% endcomment %}
      {% paginate article.comments by 5 %}
        {% comment %}
          #Comments is required, it is used as an anchor link by Shopify.
        {% endcomment %}
        <div id="Comments">

          {% if comment and comment.created_at %}
            <p class="note form-success">
              {% if blog.moderated? %}
                {{ 'blogs.comments.success_moderated' | t }}
              {% else %}
                {{ 'blogs.comments.success' | t }}
              {% endif %}
            </p>
          {% endif %}

          {% if number_of_comments > 0 %}
            <ul class="no-bullets">
              {% comment %}
                If a comment was just submitted with no blank field, show it.
              {% endcomment %}
              {% if comment and comment.created_at %}
                <li id="{{ comment.id }}" class="comment first{% if article.comments_count == 0 %} last{% endif %}">
                  {% include 'comment' %}
                </li>
              {% endif %}

              {% comment %}
                Showing the rest of the comments.
              {% endcomment %}
              {% for comment in article.comments %}
                <li id="{{ comment.id }}" class="comment{% unless number_of_comments > article.comments_count %}{% if forloop.first %} first{% endif %}{% endunless %}{% if forloop.last %} last {% endif %}">
                  {% include 'comment' %}
                </li>

                {% unless forloop.last %}
                  <li><hr></li>
                {% endunless %}
              {% endfor %}
            </ul>

            {% if paginate.pages > 1 %}
              <hr>
              <div class="pagination">
                {{ paginate | default_pagination | replace: '&laquo; Previous', '&larr;' | replace: 'Next &raquo;', '&rarr;' }}
              </div>
            {% endif %}

            <hr>

          {% endif %}

          {% comment %}
            Comment submission form
          {% endcomment %}
          <div class="form-vertical">
            {% form 'new_comment', article %}

              {% comment %}
                #AddCommentTitle is used simply as an anchor link
              {% endcomment %}
              <h3 id="AddCommentTitle">{{ 'blogs.comments.title' | t }}</h3>

              {{ form.errors | default_errors }}

              <div class="grid">

                <div class="grid__item large--one-half">
                  <label for="CommentAuthor" class="hidden-label">{{ 'blogs.comments.name' | t }}</label>
                  <input type="text" name="comment[author]" id="CommentAuthor" class="input-full{% if form.errors contains 'author' %} error{% endif %}" placeholder="{{ 'blogs.comments.name' | t }}" value="{{ form.author }}" autocapitalize="words">

                  <label for="CommentEmail" class="hidden-label">{{ 'blogs.comments.email' | t }}</label>
                  <input type="email" name="comment[email]" id="CommentEmail" class="input-full{% if form.errors contains 'email' %} error{% endif %}" placeholder="{{ 'blogs.comments.email' | t }}" value="{{ form.email }}" autocorrect="off" autocapitalize="off">
                </div>

                <div class="grid__item large--one-half">
                  <label for="CommentBody" class="hidden-label">{{ 'blogs.comments.message' | t }}</label>
                  <textarea name="comment[body]" id="CommentBody" class="input-full{% if form.errors contains 'body' %} error{% endif %}" placeholder="{{ 'blogs.comments.message' | t }}">{{ form.body }}</textarea>
                </div>

              </div>

              {% if blog.moderated? %}
                <p>{{ 'blogs.comments.moderated' | t }}</p>
              {% endif %}

              <input type="submit" class="button" value="{{ 'blogs.comments.post' | t }}">

              {% comment %}
                Assign variable to be used after timber.init() is run in theme.liquid
              {% endcomment %}
              {% if form.errors %}
                {% assign newHash = 'AddCommentTitle' %}
              {% endif %}

              {% if form.posted_successfully? %}
                {% assign newHash = 'Comments' %}
              {% endif %}

            {% endform %}
          </div>

        </div>
      {% endpaginate %}
    {% endif %}

  </article>

</div> -->
